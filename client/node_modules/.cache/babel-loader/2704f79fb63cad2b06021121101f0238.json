{"ast":null,"code":"import { takeLatest, put, call, all } from \"redux-saga/effects\";\nimport userTypes from \"./user.types\";\nimport { auth, googleProvider } from \"../../utils/firebase/firebase.utils\";\nimport { googleSignInFailure, googleSignInSuccess } from \"./users.actions\";\n\nfunction* googleSignInStart() {\n  try {\n    const userRef = yield auth.signInWithPopup(googleProvider);\n    console.log(userRef);\n  } catch (error) {\n    put(googleSignInFailure(error));\n  }\n}\n\nfunction* isGoogleSignIn() {\n  yield takeLatest(userTypes.GOOGLE_SIGN_IN_START, googleSignInStart);\n}\n\nfunction* userSagas() {\n  yield all([call(isGoogleSignIn)]);\n}\n\nexport default userSagas;","map":{"version":3,"sources":["C:/React/crwn-clothing/src/redux/users/user.sagas.js"],"names":["takeLatest","put","call","all","userTypes","auth","googleProvider","googleSignInFailure","googleSignInSuccess","googleSignInStart","userRef","signInWithPopup","console","log","error","isGoogleSignIn","GOOGLE_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,OAAOC,SAAP,MAAsB,cAAtB;AAEA,SAASC,IAAT,EAAeC,cAAf,QAAqC,qCAArC;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,QAAyD,iBAAzD;;AAEA,UAAUC,iBAAV,GAA8B;AAC5B,MAAI;AACF,UAAMC,OAAO,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,cAArB,CAAtB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACD,GAHD,CAGE,OAAOI,KAAP,EAAc;AACdb,IAAAA,GAAG,CAACM,mBAAmB,CAACO,KAAD,CAApB,CAAH;AACD;AACF;;AAED,UAAUC,cAAV,GAA2B;AACzB,QAAMf,UAAU,CAACI,SAAS,CAACY,oBAAX,EAAiCP,iBAAjC,CAAhB;AACD;;AAED,UAAUQ,SAAV,GAAsB;AACpB,QAAMd,GAAG,CAAC,CAACD,IAAI,CAACa,cAAD,CAAL,CAAD,CAAT;AACD;;AAED,eAAeE,SAAf","sourcesContent":["import { takeLatest, put, call, all } from \"redux-saga/effects\";\r\nimport userTypes from \"./user.types\";\r\n\r\nimport { auth, googleProvider } from \"../../utils/firebase/firebase.utils\";\r\nimport { googleSignInFailure, googleSignInSuccess } from \"./users.actions\";\r\n\r\nfunction* googleSignInStart() {\r\n  try {\r\n    const userRef = yield auth.signInWithPopup(googleProvider);\r\n    console.log(userRef);\r\n  } catch (error) {\r\n    put(googleSignInFailure(error));\r\n  }\r\n}\r\n\r\nfunction* isGoogleSignIn() {\r\n  yield takeLatest(userTypes.GOOGLE_SIGN_IN_START, googleSignInStart);\r\n}\r\n\r\nfunction* userSagas() {\r\n  yield all([call(isGoogleSignIn)]);\r\n}\r\n\r\nexport default userSagas;\r\n"]},"metadata":{},"sourceType":"module"}