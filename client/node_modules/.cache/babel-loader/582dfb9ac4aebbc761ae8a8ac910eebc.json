{"ast":null,"code":"import { fetchShopData, firestore } from \"../../utils/firebase/firebase.utils\";\nimport { shopTypes } from \"./shop.types\"; // export const updateShopData = (shopDataObj) => ({\n//   type: shopTypes.UPDATE_SHOPDATA,\n//   payload: shopDataObj,\n// });\n\nexport const fetchShopDataProcessing = () => ({\n  type: shopTypes.FETCH_SHOPDATA_PROCESSING\n});\nexport const fetchShopDataSuccess = shopData => ({\n  type: shopTypes.FETCH_SHOPDATA_SUCCESS,\n  payload: shopData\n});\nexport const fetchShopDataFailure = errorMessage => ({\n  type: shopTypes.FETCH_SHOPDATA_FAILURE,\n  payload: errorMessage\n}); // export const fetchShopCollectionsAsync = () => (dispatch) => {\n//   // step1: set the isFetching to true\n//   dispatch(fetchShopDataProcessing());\n//   const shopDataRef = firestore.collection(\"shopData\");\n//   shopDataRef\n//     .get()\n//     .then((snapshot) => {\n//       const shopData = fetchShopData(snapshot);\n//       // shopDataUpdater(shopData);\n//       // step2: if shopdata successfully retrieved then dispatch the success action\n//       dispatch(fetchShopDataSuccess(shopData));\n//       //remove the isLoading\n//       // this.setState({ isLoading: false });\n//     })\n//     .catch((err) => {\n//       dispatch(fetchShopDataFailure(err.message));\n//     });\n// };","map":{"version":3,"sources":["C:/React/crwn-clothing/src/redux/shop/shop.actions.js"],"names":["fetchShopData","firestore","shopTypes","fetchShopDataProcessing","type","FETCH_SHOPDATA_PROCESSING","fetchShopDataSuccess","shopData","FETCH_SHOPDATA_SUCCESS","payload","fetchShopDataFailure","errorMessage","FETCH_SHOPDATA_FAILURE"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,SAAxB,QAAyC,qCAAzC;AACA,SAASC,SAAT,QAA0B,cAA1B,C,CAEA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,uBAAuB,GAAG,OAAO;AAC5CC,EAAAA,IAAI,EAAEF,SAAS,CAACG;AAD4B,CAAP,CAAhC;AAIP,OAAO,MAAMC,oBAAoB,GAAIC,QAAD,KAAe;AACjDH,EAAAA,IAAI,EAAEF,SAAS,CAACM,sBADiC;AAEjDC,EAAAA,OAAO,EAAEF;AAFwC,CAAf,CAA7B;AAKP,OAAO,MAAMG,oBAAoB,GAAIC,YAAD,KAAmB;AACrDP,EAAAA,IAAI,EAAEF,SAAS,CAACU,sBADqC;AAErDH,EAAAA,OAAO,EAAEE;AAF4C,CAAnB,CAA7B,C,CAKP;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { fetchShopData, firestore } from \"../../utils/firebase/firebase.utils\";\r\nimport { shopTypes } from \"./shop.types\";\r\n\r\n// export const updateShopData = (shopDataObj) => ({\r\n//   type: shopTypes.UPDATE_SHOPDATA,\r\n//   payload: shopDataObj,\r\n// });\r\n\r\nexport const fetchShopDataProcessing = () => ({\r\n  type: shopTypes.FETCH_SHOPDATA_PROCESSING,\r\n});\r\n\r\nexport const fetchShopDataSuccess = (shopData) => ({\r\n  type: shopTypes.FETCH_SHOPDATA_SUCCESS,\r\n  payload: shopData,\r\n});\r\n\r\nexport const fetchShopDataFailure = (errorMessage) => ({\r\n  type: shopTypes.FETCH_SHOPDATA_FAILURE,\r\n  payload: errorMessage,\r\n});\r\n\r\n// export const fetchShopCollectionsAsync = () => (dispatch) => {\r\n//   // step1: set the isFetching to true\r\n//   dispatch(fetchShopDataProcessing());\r\n\r\n//   const shopDataRef = firestore.collection(\"shopData\");\r\n\r\n//   shopDataRef\r\n//     .get()\r\n//     .then((snapshot) => {\r\n//       const shopData = fetchShopData(snapshot);\r\n\r\n//       // shopDataUpdater(shopData);\r\n//       // step2: if shopdata successfully retrieved then dispatch the success action\r\n//       dispatch(fetchShopDataSuccess(shopData));\r\n\r\n//       //remove the isLoading\r\n//       // this.setState({ isLoading: false });\r\n//     })\r\n//     .catch((err) => {\r\n//       dispatch(fetchShopDataFailure(err.message));\r\n//     });\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}