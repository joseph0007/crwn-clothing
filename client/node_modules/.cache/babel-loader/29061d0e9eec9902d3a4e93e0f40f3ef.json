{"ast":null,"code":"import { takeLatest, put, call, all, takeEvery } from \"redux-saga/effects\";\nimport userTypes from \"./user.types\";\nimport { auth, googleProvider, createUserDocDB } from \"../../utils/firebase/firebase.utils\";\nimport { userLogoutSuccess, userLogoutFailure, signInFailure, signInSuccess, checkUserAuthStateStart } from \"./users.actions\";\nexport function* getUserSnapShot(userAuth) {\n  try {\n    const userDocRef = yield call(createUserDocDB, userAuth);\n    const userSnapShot = yield userDocRef.get();\n    yield put(signInSuccess(userSnapShot));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n/* ----------------------------- google sign in ----------------------------- */\n\nexport function* googleSignInStart() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getUserSnapShot(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isGoogleSignIn() {\n  yield takeLatest(userTypes.GOOGLE_SIGN_IN_START, googleSignInStart);\n}\n/* ------------------------------ email sign in ----------------------------- */\n\nexport function* emailAndPassLogin({\n  payload\n}) {\n  try {\n    const {\n      email,\n      password\n    } = payload;\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getUserSnapShot(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* emailAndPassLoginAsync() {\n  yield takeLatest(userTypes.EMAIL_SIGN_IN_START, emailAndPassLogin);\n}\n/* ------------------- check user session for persistence ------------------- */\n\nconst userRef = () => new Promise((resolve, reject) => {\n  const unsubscribe = auth.onAuthStateChanged(authUser => {\n    unsubscribe();\n    resolve(authUser);\n  }, reject);\n});\n\nexport function* checkUserAuth() {\n  try {} catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n/* --------------------------------- logout --------------------------------- */\n\nexport function* logout() {\n  try {\n    const userRef = yield auth.signOut();\n    console.log(userRef);\n    yield put(userLogoutSuccess());\n  } catch (error) {\n    yield put(userLogoutFailure(error));\n  }\n}\nexport function* userLogoutAsync() {\n  yield takeEvery(userTypes.USER_LOGOUT_START, logout);\n}\nexport function* userSagas() {\n  yield all([call(isGoogleSignIn), call(userLogoutAsync), call(emailAndPassLoginAsync)]);\n}","map":{"version":3,"sources":["C:/React/crwn-clothing/src/redux/users/user.sagas.js"],"names":["takeLatest","put","call","all","takeEvery","userTypes","auth","googleProvider","createUserDocDB","userLogoutSuccess","userLogoutFailure","signInFailure","signInSuccess","checkUserAuthStateStart","getUserSnapShot","userAuth","userDocRef","userSnapShot","get","error","googleSignInStart","user","signInWithPopup","isGoogleSignIn","GOOGLE_SIGN_IN_START","emailAndPassLogin","payload","email","password","signInWithEmailAndPassword","emailAndPassLoginAsync","EMAIL_SIGN_IN_START","userRef","Promise","resolve","reject","unsubscribe","onAuthStateChanged","authUser","checkUserAuth","logout","signOut","console","log","userLogoutAsync","USER_LOGOUT_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, call, all, takeEvery } from \"redux-saga/effects\";\r\nimport userTypes from \"./user.types\";\r\n\r\nimport {\r\n  auth,\r\n  googleProvider,\r\n  createUserDocDB,\r\n} from \"../../utils/firebase/firebase.utils\";\r\nimport {\r\n  userLogoutSuccess,\r\n  userLogoutFailure,\r\n  signInFailure,\r\n  signInSuccess,\r\n  checkUserAuthStateStart,\r\n} from \"./users.actions\";\r\n\r\nexport function* getUserSnapShot(userAuth) {\r\n  try {\r\n    const userDocRef = yield call(createUserDocDB, userAuth);\r\n    const userSnapShot = yield userDocRef.get();\r\n\r\n    yield put(signInSuccess(userSnapShot));\r\n  } catch (error) {\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\n\r\n/* ----------------------------- google sign in ----------------------------- */\r\nexport function* googleSignInStart() {\r\n  try {\r\n    const { user } = yield auth.signInWithPopup(googleProvider);\r\n\r\n    yield getUserSnapShot(user);\r\n  } catch (error) {\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* isGoogleSignIn() {\r\n  yield takeLatest(userTypes.GOOGLE_SIGN_IN_START, googleSignInStart);\r\n}\r\n\r\n/* ------------------------------ email sign in ----------------------------- */\r\nexport function* emailAndPassLogin({ payload }) {\r\n  try {\r\n    const { email, password } = payload;\r\n\r\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n    yield getUserSnapShot(user);\r\n  } catch (error) {\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* emailAndPassLoginAsync() {\r\n  yield takeLatest(userTypes.EMAIL_SIGN_IN_START, emailAndPassLogin);\r\n}\r\n\r\n/* ------------------- check user session for persistence ------------------- */\r\nconst userRef = () =>\r\n  new Promise((resolve, reject) => {\r\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\r\n      unsubscribe();\r\n      resolve(authUser);\r\n    }, reject);\r\n  });\r\n\r\nexport function* checkUserAuth() {\r\n  try {\r\n  } catch (error) {\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\n\r\n/* --------------------------------- logout --------------------------------- */\r\nexport function* logout() {\r\n  try {\r\n    const userRef = yield auth.signOut();\r\n\r\n    console.log(userRef);\r\n\r\n    yield put(userLogoutSuccess());\r\n  } catch (error) {\r\n    yield put(userLogoutFailure(error));\r\n  }\r\n}\r\n\r\nexport function* userLogoutAsync() {\r\n  yield takeEvery(userTypes.USER_LOGOUT_START, logout);\r\n}\r\n\r\nexport function* userSagas() {\r\n  yield all([\r\n    call(isGoogleSignIn),\r\n    call(userLogoutAsync),\r\n    call(emailAndPassLoginAsync),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}