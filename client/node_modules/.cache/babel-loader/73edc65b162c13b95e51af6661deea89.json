{"ast":null,"code":"import { fetchShopData, firestore } from \"../../utils/firebase/firebase.utils\";\nimport { shopTypes } from \"./shop.types\"; // export const updateShopData = (shopDataObj) => ({\n//   type: shopTypes.UPDATE_SHOPDATA,\n//   payload: shopDataObj,\n// });\n\nconst fetchShopDataProcessing = () => ({\n  type: shopTypes.FETCH_SHOPDATA_PROCESSING\n});\n\nconst fetchShopDataSuccess = shopData => ({\n  type: shopTypes.FETCH_SHOPDATA_SUCCESS,\n  payload: shopData\n});\n\nconst fetchShopDataFailure = errorMessage => ({\n  type: shopTypes.FETCH_SHOPDATA_FAILURE,\n  payload: errorMessage\n});\n\nexport const fetchShopCollectionsAsync = () => dispatch => {\n  // step1: set the isFetching to true\n  dispatch(fetchShopDataProcessing());\n  const shopDataRef = firestore.collection(\"shopData\");\n  shopDataRef.get().then(snapshot => {\n    const shopData = fetchShopData(snapshot); // shopDataUpdater(shopData);\n    // step2: if shopdata successfully retrieved then dispatch the success action\n\n    dispatch(fetchShopDataSuccess(shopData)); //remove the isLoading\n    // this.setState({ isLoading: false });\n  }).catch(err => {\n    dispatch(fetchShopDataFailure(err.message));\n  });\n};","map":{"version":3,"sources":["C:/React/crwn-clothing/src/redux/shop/shop.actions.js"],"names":["fetchShopData","firestore","shopTypes","fetchShopDataProcessing","type","FETCH_SHOPDATA_PROCESSING","fetchShopDataSuccess","shopData","FETCH_SHOPDATA_SUCCESS","payload","fetchShopDataFailure","errorMessage","FETCH_SHOPDATA_FAILURE","fetchShopCollectionsAsync","dispatch","shopDataRef","collection","get","then","snapshot","catch","err","message"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,SAAxB,QAAyC,qCAAzC;AACA,SAASC,SAAT,QAA0B,cAA1B,C,CAEA;AACA;AACA;AACA;;AAEA,MAAMC,uBAAuB,GAAG,OAAO;AACrCC,EAAAA,IAAI,EAAEF,SAAS,CAACG;AADqB,CAAP,CAAhC;;AAIA,MAAMC,oBAAoB,GAAIC,QAAD,KAAe;AAC1CH,EAAAA,IAAI,EAAEF,SAAS,CAACM,sBAD0B;AAE1CC,EAAAA,OAAO,EAAEF;AAFiC,CAAf,CAA7B;;AAKA,MAAMG,oBAAoB,GAAIC,YAAD,KAAmB;AAC9CP,EAAAA,IAAI,EAAEF,SAAS,CAACU,sBAD8B;AAE9CH,EAAAA,OAAO,EAAEE;AAFqC,CAAnB,CAA7B;;AAKA,OAAO,MAAME,yBAAyB,GAAG,MAAOC,QAAD,IAAc;AAC3D;AACAA,EAAAA,QAAQ,CAACX,uBAAuB,EAAxB,CAAR;AAEA,QAAMY,WAAW,GAAGd,SAAS,CAACe,UAAV,CAAqB,UAArB,CAApB;AAEAD,EAAAA,WAAW,CACRE,GADH,GAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,UAAMZ,QAAQ,GAAGP,aAAa,CAACmB,QAAD,CAA9B,CADkB,CAGlB;AACA;;AACAL,IAAAA,QAAQ,CAACR,oBAAoB,CAACC,QAAD,CAArB,CAAR,CALkB,CAOlB;AACA;AACD,GAXH,EAYGa,KAZH,CAYUC,GAAD,IAAS;AACdP,IAAAA,QAAQ,CAACJ,oBAAoB,CAACW,GAAG,CAACC,OAAL,CAArB,CAAR;AACD,GAdH;AAeD,CArBM","sourcesContent":["import { fetchShopData, firestore } from \"../../utils/firebase/firebase.utils\";\r\nimport { shopTypes } from \"./shop.types\";\r\n\r\n// export const updateShopData = (shopDataObj) => ({\r\n//   type: shopTypes.UPDATE_SHOPDATA,\r\n//   payload: shopDataObj,\r\n// });\r\n\r\nconst fetchShopDataProcessing = () => ({\r\n  type: shopTypes.FETCH_SHOPDATA_PROCESSING,\r\n});\r\n\r\nconst fetchShopDataSuccess = (shopData) => ({\r\n  type: shopTypes.FETCH_SHOPDATA_SUCCESS,\r\n  payload: shopData,\r\n});\r\n\r\nconst fetchShopDataFailure = (errorMessage) => ({\r\n  type: shopTypes.FETCH_SHOPDATA_FAILURE,\r\n  payload: errorMessage,\r\n});\r\n\r\nexport const fetchShopCollectionsAsync = () => (dispatch) => {\r\n  // step1: set the isFetching to true\r\n  dispatch(fetchShopDataProcessing());\r\n\r\n  const shopDataRef = firestore.collection(\"shopData\");\r\n\r\n  shopDataRef\r\n    .get()\r\n    .then((snapshot) => {\r\n      const shopData = fetchShopData(snapshot);\r\n\r\n      // shopDataUpdater(shopData);\r\n      // step2: if shopdata successfully retrieved then dispatch the success action\r\n      dispatch(fetchShopDataSuccess(shopData));\r\n\r\n      //remove the isLoading\r\n      // this.setState({ isLoading: false });\r\n    })\r\n    .catch((err) => {\r\n      dispatch(fetchShopDataFailure(err.message));\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}