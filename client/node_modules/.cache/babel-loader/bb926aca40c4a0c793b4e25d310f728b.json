{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{connect}from\"react-redux\";import{withRouter}from\"react-router-dom\";import\"./cart-dropdown.styles.scss\";import CustomButton from\"../customButton/customButton.component\";import CartItem from\"../cartItem/cartItem.component\";import{selectCartItems}from\"../../redux/cart/cart.selectors\";import{toggleCartVisibility}from\"../../redux/cart/cart.actions\";var CartDropdown=function CartDropdown(_ref){var cartItems=_ref.cartItems,history=_ref.history,dispatch=_ref.dispatch;return/*#__PURE__*/_jsxs(\"div\",{className:\"cart-dropdown\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"cart-items\",children:cartItems.length?cartItems.map(function(item){return/*#__PURE__*/_jsx(CartItem,{item:item},item.id);}):/*#__PURE__*/_jsx(\"span\",{className:\"empty-message\",children:\"No Items In The Cart :(\"})}),/*#__PURE__*/_jsx(CustomButton,{onClick:function onClick(){dispatch(toggleCartVisibility());history.push(\"/checkout\");},children:\"GO TO CHECKOUT\"})]});};var mapStateToProps=function mapStateToProps(state){return{cartItems:selectCartItems(state)};};// when you dont pass amapDispatchToProps method then redux automatically passes a dispatch method in the props of the function so\n// that it can be used inside the Component to dispatch any action :)\nexport default withRouter(connect(mapStateToProps)(CartDropdown));","map":{"version":3,"sources":["C:/React/crwn-clothing/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["connect","withRouter","CustomButton","CartItem","selectCartItems","toggleCartVisibility","CartDropdown","cartItems","history","dispatch","length","map","item","id","push","mapStateToProps","state"],"mappings":"wFAAA,OAASA,OAAT,KAAwB,aAAxB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CAEA,MAAO,6BAAP,CACA,MAAOC,CAAAA,YAAP,KAAyB,wCAAzB,CACA,MAAOC,CAAAA,QAAP,KAAqB,gCAArB,CACA,OAASC,eAAT,KAAgC,iCAAhC,CACA,OAASC,oBAAT,KAAqC,+BAArC,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,UAAGC,CAAAA,SAAH,MAAGA,SAAH,CAAcC,OAAd,MAAcA,OAAd,CAAuBC,QAAvB,MAAuBA,QAAvB,oBACnB,aAAK,SAAS,CAAC,eAAf,wBACE,YAAK,SAAS,CAAC,YAAf,UACGF,SAAS,CAACG,MAAV,CACCH,SAAS,CAACI,GAAV,CAAc,SAACC,IAAD,qBAAU,KAAC,QAAD,EAAwB,IAAI,CAAEA,IAA9B,EAAeA,IAAI,CAACC,EAApB,CAAV,EAAd,CADD,cAGC,aAAM,SAAS,CAAC,eAAhB,qCAJJ,EADF,cAQE,KAAC,YAAD,EACE,OAAO,CAAE,kBAAM,CACbJ,QAAQ,CAACJ,oBAAoB,EAArB,CAAR,CACAG,OAAO,CAACM,IAAR,CAAa,WAAb,EACD,CAJH,4BARF,GADmB,EAArB,CAoBA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CACjC,MAAO,CACLT,SAAS,CAAEH,eAAe,CAACY,KAAD,CADrB,CAAP,CAGD,CAJD,CAMA;AACA;AACA,cAAef,CAAAA,UAAU,CAACD,OAAO,CAACe,eAAD,CAAP,CAAyBT,YAAzB,CAAD,CAAzB","sourcesContent":["import { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport \"./cart-dropdown.styles.scss\";\r\nimport CustomButton from \"../customButton/customButton.component\";\r\nimport CartItem from \"../cartItem/cartItem.component\";\r\nimport { selectCartItems } from \"../../redux/cart/cart.selectors\";\r\nimport { toggleCartVisibility } from \"../../redux/cart/cart.actions\";\r\n\r\nconst CartDropdown = ({ cartItems, history, dispatch }) => (\r\n  <div className=\"cart-dropdown\">\r\n    <div className=\"cart-items\">\r\n      {cartItems.length ? (\r\n        cartItems.map((item) => <CartItem key={item.id} item={item}></CartItem>)\r\n      ) : (\r\n        <span className=\"empty-message\">No Items In The Cart :(</span>\r\n      )}\r\n    </div>\r\n    <CustomButton\r\n      onClick={() => {\r\n        dispatch(toggleCartVisibility());\r\n        history.push(\"/checkout\");\r\n      }}\r\n    >\r\n      GO TO CHECKOUT\r\n    </CustomButton>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cartItems: selectCartItems(state),\r\n  };\r\n};\r\n\r\n// when you dont pass amapDispatchToProps method then redux automatically passes a dispatch method in the props of the function so\r\n// that it can be used inside the Component to dispatch any action :)\r\nexport default withRouter(connect(mapStateToProps)(CartDropdown));\r\n"]},"metadata":{},"sourceType":"module"}