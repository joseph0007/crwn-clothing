{"ast":null,"code":"import _regeneratorRuntime from\"C:/React/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"C:/React/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"C:/React/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import firebase from\"firebase/app\";import\"firebase/auth\";import\"firebase/firestore\";var config={apiKey:\"AIzaSyD0t0p_x2kCQrDcddndYcVxZZwGVdyG8MQ\",authDomain:\"crwn-clothing-e93a4.firebaseapp.com\",databaseURL:\"https://crwn-clothing-e93a4.firebaseio.com\",projectId:\"crwn-clothing-e93a4\",storageBucket:\"crwn-clothing-e93a4.appspot.com\",messagingSenderId:\"847126168089\",appId:\"1:847126168089:web:8e2055bde8d2aea7a86088\",measurementId:\"G-QBRKGPD4LE\"};firebase.initializeApp(config);export var auth=firebase.auth();export var firestore=firebase.firestore();export var createUserDocDB=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(userAuth,additionalData){var userRef,userSnap,displayName,email,createdAt;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(userAuth){_context.next=2;break;}return _context.abrupt(\"return\");case 2:// check if the user already exist\nuserRef=firestore.doc(\"users/\".concat(userAuth.uid));_context.next=5;return userRef.get();case 5:userSnap=_context.sent;if(userSnap.exists){_context.next=17;break;}displayName=userAuth.displayName,email=userAuth.email;createdAt=new Date();_context.prev=9;_context.next=12;return userRef.set(_objectSpread({displayName:displayName,email:email,createdAt:createdAt},additionalData));case 12:_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](9);console.log(\"user not created\",_context.t0);case 17:return _context.abrupt(\"return\",userRef);case 18:case\"end\":return _context.stop();}}},_callee,null,[[9,14]]);}));return function createUserDocDB(_x,_x2){return _ref.apply(this,arguments);};}();export var provider=new firebase.auth.GoogleAuthProvider();provider.setCustomParameters({prompt:\"select_account\"});export var signInWithGoogle=function signInWithGoogle(){return auth.signInWithPopup(provider);};export default firebase;// USER AUTHENTICATED SESSION PERSISTENCE","map":{"version":3,"sources":["C:/React/crwn-clothing/src/utils/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","auth","firestore","createUserDocDB","userAuth","additionalData","userRef","doc","uid","get","userSnap","exists","displayName","email","createdAt","Date","set","console","log","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"maAAA,MAAOA,CAAAA,QAAP,KAAqB,cAArB,CACA,MAAO,eAAP,CACA,MAAO,oBAAP,CAEA,GAAMC,CAAAA,MAAM,CAAG,CACbC,MAAM,CAAE,yCADK,CAEbC,UAAU,CAAE,qCAFC,CAGbC,WAAW,CAAE,4CAHA,CAIbC,SAAS,CAAE,qBAJE,CAKbC,aAAa,CAAE,iCALF,CAMbC,iBAAiB,CAAE,cANN,CAObC,KAAK,CAAE,2CAPM,CAQbC,aAAa,CAAE,cARF,CAAf,CAWAT,QAAQ,CAACU,aAAT,CAAuBT,MAAvB,EAEA,MAAO,IAAMU,CAAAA,IAAI,CAAGX,QAAQ,CAACW,IAAT,EAAb,CACP,MAAO,IAAMC,CAAAA,SAAS,CAAGZ,QAAQ,CAACY,SAAT,EAAlB,CAEP,MAAO,IAAMC,CAAAA,eAAe,0FAAG,iBAAOC,QAAP,CAAiBC,cAAjB,sKAExBD,QAFwB,iEAI7B;AACME,OALuB,CAKbJ,SAAS,CAACK,GAAV,iBAAuBH,QAAQ,CAACI,GAAhC,EALa,uBAONF,CAAAA,OAAO,CAACG,GAAR,EAPM,QAOvBC,QAPuB,kBAYxBA,QAAQ,CAACC,MAZe,0BAanBC,WAbmB,CAaIR,QAbJ,CAanBQ,WAbmB,CAaNC,KAbM,CAaIT,QAbJ,CAaNS,KAbM,CAerBC,SAfqB,CAeT,GAAIC,CAAAA,IAAJ,EAfS,wCAkBnBT,CAAAA,OAAO,CAACU,GAAR,gBACJJ,WAAW,CAAXA,WADI,CAEJC,KAAK,CAALA,KAFI,CAGJC,SAAS,CAATA,SAHI,EAIDT,cAJC,EAlBmB,0FAyBzBY,OAAO,CAACC,GAAR,CAAY,kBAAZ,cAzByB,wCA6BtBZ,OA7BsB,uEAAH,kBAAfH,CAAAA,eAAe,gDAArB,CAgCP,MAAO,IAAMgB,CAAAA,QAAQ,CAAG,GAAI7B,CAAAA,QAAQ,CAACW,IAAT,CAAcmB,kBAAlB,EAAjB,CACPD,QAAQ,CAACE,mBAAT,CAA6B,CAAEC,MAAM,CAAE,gBAAV,CAA7B,EAEA,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,SAAMtB,CAAAA,IAAI,CAACuB,eAAL,CAAqBL,QAArB,CAAN,EAAzB,CAEP,cAAe7B,CAAAA,QAAf,CAEA","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyD0t0p_x2kCQrDcddndYcVxZZwGVdyG8MQ\",\r\n  authDomain: \"crwn-clothing-e93a4.firebaseapp.com\",\r\n  databaseURL: \"https://crwn-clothing-e93a4.firebaseio.com\",\r\n  projectId: \"crwn-clothing-e93a4\",\r\n  storageBucket: \"crwn-clothing-e93a4.appspot.com\",\r\n  messagingSenderId: \"847126168089\",\r\n  appId: \"1:847126168089:web:8e2055bde8d2aea7a86088\",\r\n  measurementId: \"G-QBRKGPD4LE\",\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nexport const createUserDocDB = async (userAuth, additionalData) => {\r\n  // if no user dont create any document!!\r\n  if (!userAuth) return;\r\n\r\n  // check if the user already exist\r\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n\r\n  const userSnap = await userRef.get();\r\n\r\n  // console.log(userRef, userSnap);\r\n\r\n  // if not then create new user\r\n  if (!userSnap.exists) {\r\n    const { displayName, email } = userAuth;\r\n\r\n    const createdAt = new Date();\r\n\r\n    try {\r\n      await userRef.set({\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n        ...additionalData,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"user not created\", error);\r\n    }\r\n  }\r\n\r\n  return userRef;\r\n};\r\n\r\nexport const provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: \"select_account\" });\r\n\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;\r\n\r\n// USER AUTHENTICATED SESSION PERSISTENCE\r\n"]},"metadata":{},"sourceType":"module"}