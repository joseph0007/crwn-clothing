{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\React\\\\crwn-clothing\\\\src\\\\components\\\\cart-dropdown\\\\cart-dropdown.component.jsx\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./cart-dropdown.styles.scss\";\nimport CustomButton from \"../customButton/customButton.component\";\nimport CartItem from \"../cartItem/cartItem.component\";\nimport { selectCartItems } from \"../../redux/cart/cart.selectors\";\nimport { toggleCartVisibility } from \"../../redux/cart/cart.actions\";\n\nconst CartDropdown = ({\n  cartItems,\n  history,\n  dispatch\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"cart-dropdown\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart-items\",\n    children: cartItems.length ? cartItems.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      item: item\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 33\n    }, this)) : /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"empty-message\",\n      children: \"No Items In The Cart :(\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n    onClick: () => {\n      dispatch();\n      history.push(\"/checkout\");\n    },\n    children: \"GO TO CHECKOUT\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 3\n}, this);\n\n_c = CartDropdown;\n\nconst mapStateToProps = state => {\n  return {\n    cartItems: selectCartItems(state)\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(CartDropdown));\n\nvar _c;\n\n$RefreshReg$(_c, \"CartDropdown\");","map":{"version":3,"sources":["C:/React/crwn-clothing/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["connect","withRouter","CustomButton","CartItem","selectCartItems","toggleCartVisibility","CartDropdown","cartItems","history","dispatch","length","map","item","id","push","mapStateToProps","state"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAO,6BAAP;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,oBAAT,QAAqC,+BAArC;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,CAAD,kBACnB;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA,0BACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,cACGF,SAAS,CAACG,MAAV,GACCH,SAAS,CAACI,GAAV,CAAeC,IAAD,iBAAU,QAAC,QAAD;AAAwB,MAAA,IAAI,EAAEA;AAA9B,OAAeA,IAAI,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,YAAxB,CADD,gBAGC;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF,eAQE,QAAC,YAAD;AACE,IAAA,OAAO,EAAE,MAAM;AACbJ,MAAAA,QAAQ;AACRD,MAAAA,OAAO,CAACM,IAAR,CAAa,WAAb;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UARF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMR,Y;;AAoBN,MAAMS,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLT,IAAAA,SAAS,EAAEH,eAAe,CAACY,KAAD;AADrB,GAAP;AAGD,CAJD;;AAMA,eAAef,UAAU,CAACD,OAAO,CAACe,eAAD,CAAP,CAAyBT,YAAzB,CAAD,CAAzB","sourcesContent":["import { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport \"./cart-dropdown.styles.scss\";\r\nimport CustomButton from \"../customButton/customButton.component\";\r\nimport CartItem from \"../cartItem/cartItem.component\";\r\nimport { selectCartItems } from \"../../redux/cart/cart.selectors\";\r\nimport { toggleCartVisibility } from \"../../redux/cart/cart.actions\";\r\n\r\nconst CartDropdown = ({ cartItems, history, dispatch }) => (\r\n  <div className=\"cart-dropdown\">\r\n    <div className=\"cart-items\">\r\n      {cartItems.length ? (\r\n        cartItems.map((item) => <CartItem key={item.id} item={item}></CartItem>)\r\n      ) : (\r\n        <span className=\"empty-message\">No Items In The Cart :(</span>\r\n      )}\r\n    </div>\r\n    <CustomButton\r\n      onClick={() => {\r\n        dispatch();\r\n        history.push(\"/checkout\");\r\n      }}\r\n    >\r\n      GO TO CHECKOUT\r\n    </CustomButton>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cartItems: selectCartItems(state),\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(CartDropdown));\r\n"]},"metadata":{},"sourceType":"module"}