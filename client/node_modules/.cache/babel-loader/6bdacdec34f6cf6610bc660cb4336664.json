{"ast":null,"code":"import { createSelector } from \"reselect\";\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartQuantity = createSelector([selectCart], cart => cart.cartItems.reduce((acc, curr) => acc += curr.quantity, 0));\nexport const selectCartTotal = createSelector([selectCart], cart => cart.cartItems.reduce((acc, curr) => acc += curr.quantity * curr.price, 0));\n/**\r\n * selectors are a type of memoized function which remembers the previous arguments passed and previous result.\r\n * Its basically caching the arguments passed which helps in deciding whether to recompute the function or not.\r\n * React component re-renders if a new object is passed to it and so what selectors do is they decide if the arguments passed\r\n * bring any change or not and based on that passes the old values or new values. If the old values are passed then the react component\r\n * does not re-render and a lot of computing power is saved.\r\n */","map":{"version":3,"sources":["C:/React/crwn-clothing/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectHidden","hidden","selectCartQuantity","reduce","acc","curr","quantity","selectCartTotal","price"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAWA,KAAK,CAACC,IAApC;;AAEA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CAC3C,CAACC,UAAD,CAD2C,EAE1CE,IAAD,IAAUA,IAAI,CAACE,SAF4B,CAAtC;AAKP,OAAO,MAAMC,YAAY,GAAGN,cAAc,CAAC,CAACC,UAAD,CAAD,EAAgBE,IAAD,IAAUA,IAAI,CAACI,MAA9B,CAAnC;AAEP,OAAO,MAAMC,kBAAkB,GAAGR,cAAc,CAAC,CAACC,UAAD,CAAD,EAAgBE,IAAD,IAC7DA,IAAI,CAACE,SAAL,CAAeI,MAAf,CAAsB,CAACC,GAAD,EAAMC,IAAN,KAAgBD,GAAG,IAAIC,IAAI,CAACC,QAAlD,EAA6D,CAA7D,CAD8C,CAAzC;AAIP,OAAO,MAAMC,eAAe,GAAGb,cAAc,CAAC,CAACC,UAAD,CAAD,EAAgBE,IAAD,IAC1DA,IAAI,CAACE,SAAL,CAAeI,MAAf,CAAsB,CAACC,GAAD,EAAMC,IAAN,KAAgBD,GAAG,IAAIC,IAAI,CAACC,QAAL,GAAgBD,IAAI,CAACG,KAAlE,EAA0E,CAA1E,CAD2C,CAAtC;AAIP;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { createSelector } from \"reselect\";\r\n\r\nconst selectCart = (state) => state.cart;\r\n\r\nexport const selectCartItems = createSelector(\r\n  [selectCart],\r\n  (cart) => cart.cartItems\r\n);\r\n\r\nexport const selectHidden = createSelector([selectCart], (cart) => cart.hidden);\r\n\r\nexport const selectCartQuantity = createSelector([selectCart], (cart) =>\r\n  cart.cartItems.reduce((acc, curr) => (acc += curr.quantity), 0)\r\n);\r\n\r\nexport const selectCartTotal = createSelector([selectCart], (cart) =>\r\n  cart.cartItems.reduce((acc, curr) => (acc += curr.quantity * curr.price), 0)\r\n);\r\n\r\n/**\r\n * selectors are a type of memoized function which remembers the previous arguments passed and previous result.\r\n * Its basically caching the arguments passed which helps in deciding whether to recompute the function or not.\r\n * React component re-renders if a new object is passed to it and so what selectors do is they decide if the arguments passed\r\n * bring any change or not and based on that passes the old values or new values. If the old values are passed then the react component\r\n * does not re-render and a lot of computing power is saved.\r\n */\r\n"]},"metadata":{},"sourceType":"module"}