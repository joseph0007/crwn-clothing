{"ast":null,"code":"import { shopTypes } from \"./shop.types\";\nconst INITIAL_STATE = {\n  shop_data: null,\n  isFetching: false,\n  errorMessage: undefined\n};\n\nconst shopReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case shopTypes.FETCH_SHOPDATA_PROCESSING:\n      {\n        return { ...state,\n          isFetching: true\n        };\n      }\n\n    case shopTypes.FETCH_SHOPDATA_SUCCESS:\n      {\n        return { ...state,\n          shop_data: action.payload,\n          isFetching: false\n        };\n      }\n\n    case shopTypes.FETCH_SHOPDATA_FAILURE:\n      {\n        return { ...state,\n          isFetching: false,\n          errorMessage: action.payload\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport default shopReducer;","map":{"version":3,"sources":["C:/React/crwn-clothing/client/src/redux/shop/shop.reducer.js"],"names":["shopTypes","INITIAL_STATE","shop_data","isFetching","errorMessage","undefined","shopReducer","state","action","type","FETCH_SHOPDATA_PROCESSING","FETCH_SHOPDATA_SUCCESS","payload","FETCH_SHOPDATA_FAILURE"],"mappings":"AAAA,SAASA,SAAT,QAA0B,cAA1B;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,SAAS,EAAE,IADS;AAEpBC,EAAAA,UAAU,EAAE,KAFQ;AAGpBC,EAAAA,YAAY,EAAEC;AAHM,CAAtB;;AAMA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGN,aAAT,EAAwBO,MAAxB,KAAmC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,SAAS,CAACU,yBAAf;AAA0C;AACxC,eAAO,EACL,GAAGH,KADE;AAELJ,UAAAA,UAAU,EAAE;AAFP,SAAP;AAID;;AAED,SAAKH,SAAS,CAACW,sBAAf;AAAuC;AACrC,eAAO,EACL,GAAGJ,KADE;AAELL,UAAAA,SAAS,EAAEM,MAAM,CAACI,OAFb;AAGLT,UAAAA,UAAU,EAAE;AAHP,SAAP;AAKD;;AAED,SAAKH,SAAS,CAACa,sBAAf;AAAuC;AACrC,eAAO,EACL,GAAGN,KADE;AAELJ,UAAAA,UAAU,EAAE,KAFP;AAGLC,UAAAA,YAAY,EAAEI,MAAM,CAACI;AAHhB,SAAP;AAKD;;AAED;AAAS;AACP,eAAOL,KAAP;AACD;AA1BH;AA4BD,CA7BD;;AA+BA,eAAeD,WAAf","sourcesContent":["import { shopTypes } from \"./shop.types\";\r\n\r\nconst INITIAL_STATE = {\r\n  shop_data: null,\r\n  isFetching: false,\r\n  errorMessage: undefined,\r\n};\r\n\r\nconst shopReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case shopTypes.FETCH_SHOPDATA_PROCESSING: {\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n      };\r\n    }\r\n\r\n    case shopTypes.FETCH_SHOPDATA_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        shop_data: action.payload,\r\n        isFetching: false,\r\n      };\r\n    }\r\n\r\n    case shopTypes.FETCH_SHOPDATA_FAILURE: {\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        errorMessage: action.payload,\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default shopReducer;\r\n"]},"metadata":{},"sourceType":"module"}