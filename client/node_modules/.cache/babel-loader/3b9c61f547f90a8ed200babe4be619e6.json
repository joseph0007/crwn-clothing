{"ast":null,"code":"import { applyMiddleware, createStore } from \"redux\";\nimport { logger } from \"redux-logger\"; // import thunk from \"redux-thunk\";\n\nimport { persistStore } from \"redux-persist\"; // import { fetchShopCollectionsStart } from \"./shop/shop.sagas\";\n\nimport rootSaga from \"./root.sagas\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootReducer from \"./root.reducer\";\nconst sagaMiddleware = createSagaMiddleware();\nconst middleware = [sagaMiddleware]; // if (process.env.NODE_ENV === \"development\")\n\nmiddleware.push(logger);\nconst store = createStore(rootReducer, applyMiddleware(...middleware));\nsagaMiddleware.run(rootSaga);\nexport const persistor = persistStore(store);\nexport default store;","map":{"version":3,"sources":["C:/React/crwn-clothing/client/src/redux/store.js"],"names":["applyMiddleware","createStore","logger","persistStore","rootSaga","createSagaMiddleware","rootReducer","sagaMiddleware","middleware","push","store","run","persistor"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,MAAT,QAAuB,cAAvB,C,CACA;;AACA,SAASC,YAAT,QAA6B,eAA7B,C,CACA;;AACA,OAAOC,QAAP,MAAqB,cAArB;AAEA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,MAAMC,cAAc,GAAGF,oBAAoB,EAA3C;AAEA,MAAMG,UAAU,GAAG,CAACD,cAAD,CAAnB,C,CAEA;;AACAC,UAAU,CAACC,IAAX,CAAgBP,MAAhB;AAEA,MAAMQ,KAAK,GAAGT,WAAW,CAACK,WAAD,EAAcN,eAAe,CAAC,GAAGQ,UAAJ,CAA7B,CAAzB;AAEAD,cAAc,CAACI,GAAf,CAAmBP,QAAnB;AAEA,OAAO,MAAMQ,SAAS,GAAGT,YAAY,CAACO,KAAD,CAA9B;AAEP,eAAeA,KAAf","sourcesContent":["import { applyMiddleware, createStore } from \"redux\";\r\nimport { logger } from \"redux-logger\";\r\n// import thunk from \"redux-thunk\";\r\nimport { persistStore } from \"redux-persist\";\r\n// import { fetchShopCollectionsStart } from \"./shop/shop.sagas\";\r\nimport rootSaga from \"./root.sagas\";\r\n\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nimport rootReducer from \"./root.reducer\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middleware = [sagaMiddleware];\r\n\r\n// if (process.env.NODE_ENV === \"development\")\r\nmiddleware.push(logger);\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middleware));\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}