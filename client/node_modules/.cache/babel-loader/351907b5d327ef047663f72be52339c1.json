{"ast":null,"code":"import _objectSpread from\"C:/React/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import cartTypes from\"./cart.types\";import{addNewCartItem,reduceCartItemQuantity}from\"./cart.utils\";var INITIAL_STATE={hidden:false,cartItems:[]};var cartReducer=function cartReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:INITIAL_STATE;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case cartTypes.TOGGLE_CART_VISIBLE:return _objectSpread(_objectSpread({},state),{},{hidden:!state.hidden});case cartTypes.ADD_CART_ITEM:return _objectSpread(_objectSpread({},state),{},{cartItems:addNewCartItem(state.cartItems,action.payload)});case cartTypes.REDUCE_CART_ITEM:return _objectSpread(_objectSpread({},state),{},{cartItems:reduceCartItemQuantity(state.cartItems,action.payload)});case cartTypes.CLEAR_CART_ITEM:return _objectSpread(_objectSpread({},state),{},{cartItems:state.cartItems.filter(function(item){return item.id!==action.payload.id;})});default:return state;}};export default cartReducer;","map":{"version":3,"sources":["C:/React/crwn-clothing/src/redux/cart/cart.reducer.js"],"names":["cartTypes","addNewCartItem","reduceCartItemQuantity","INITIAL_STATE","hidden","cartItems","cartReducer","state","action","type","TOGGLE_CART_VISIBLE","ADD_CART_ITEM","payload","REDUCE_CART_ITEM","CLEAR_CART_ITEM","filter","item","id"],"mappings":"4IAAA,MAAOA,CAAAA,SAAP,KAAsB,cAAtB,CACA,OAASC,cAAT,CAAyBC,sBAAzB,KAAuD,cAAvD,CAEA,GAAMC,CAAAA,aAAa,CAAG,CACpBC,MAAM,CAAE,KADY,CAEpBC,SAAS,CAAE,EAFS,CAAtB,CAKA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAmC,IAAlCC,CAAAA,KAAkC,2DAA1BJ,aAA0B,IAAXK,CAAAA,MAAW,2CACrD,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKT,CAAAA,SAAS,CAACU,mBAAf,CACE,sCACKH,KADL,MAEEH,MAAM,CAAE,CAACG,KAAK,CAACH,MAFjB,GAKF,IAAKJ,CAAAA,SAAS,CAACW,aAAf,CACE,sCACKJ,KADL,MAEEF,SAAS,CAAEJ,cAAc,CAACM,KAAK,CAACF,SAAP,CAAkBG,MAAM,CAACI,OAAzB,CAF3B,GAKF,IAAKZ,CAAAA,SAAS,CAACa,gBAAf,CACE,sCACKN,KADL,MAEEF,SAAS,CAAEH,sBAAsB,CAACK,KAAK,CAACF,SAAP,CAAkBG,MAAM,CAACI,OAAzB,CAFnC,GAKF,IAAKZ,CAAAA,SAAS,CAACc,eAAf,CACE,sCACKP,KADL,MAEEF,SAAS,CAAEE,KAAK,CAACF,SAAN,CAAgBU,MAAhB,CACT,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,EAAL,GAAYT,MAAM,CAACI,OAAP,CAAeK,EAArC,EADS,CAFb,GAOF,QACE,MAAOV,CAAAA,KAAP,CA5BJ,CA8BD,CA/BD,CAiCA,cAAeD,CAAAA,WAAf","sourcesContent":["import cartTypes from \"./cart.types\";\r\nimport { addNewCartItem, reduceCartItemQuantity } from \"./cart.utils\";\r\n\r\nconst INITIAL_STATE = {\r\n  hidden: false,\r\n  cartItems: [],\r\n};\r\n\r\nconst cartReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case cartTypes.TOGGLE_CART_VISIBLE:\r\n      return {\r\n        ...state,\r\n        hidden: !state.hidden,\r\n      };\r\n\r\n    case cartTypes.ADD_CART_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: addNewCartItem(state.cartItems, action.payload),\r\n      };\r\n\r\n    case cartTypes.REDUCE_CART_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: reduceCartItemQuantity(state.cartItems, action.payload),\r\n      };\r\n\r\n    case cartTypes.CLEAR_CART_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter(\r\n          (item) => item.id !== action.payload.id\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cartReducer;\r\n"]},"metadata":{},"sourceType":"module"}