{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\React\\\\crwn-clothing\\\\src\\\\pages\\\\shoppage\\\\shoppage.page.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\"; // import { firestore, fetchShopData } from \"../../utils/firebase/firebase.utils\";\n\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport CollectionPreview from \"../../components/collection-preview/collection-preview.component\";\nimport Category from \"../../components/category/category.component\";\nimport { withSpinner } from \"../../components/with-spinner/with-spinner.component\";\nimport { selectIsFetching } from \"../../redux/shop/shop.selectors\";\nimport { fetchShopCollectionsAsync } from \"../../redux/shop/shop.actions\";\nimport \"./shoppage.styles.scss\";\nconst WithSpinnerCollectionPreview = withSpinner(CollectionPreview);\n_c = WithSpinnerCollectionPreview;\nconst WithSpinnerCategory = withSpinner(Category);\n_c2 = WithSpinnerCategory;\n\nclass Shop extends React.Component {\n  componentDidMount() {\n    const {\n      fetchShopCollectionsAsync\n    } = this.props;\n    fetchShopCollectionsAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isFetching\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}/`,\n        render: props => /*#__PURE__*/_jsxDEV(WithSpinnerCollectionPreview, {\n          isLoading: isFetching,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:categoryId`,\n        render: props => /*#__PURE__*/_jsxDEV(WithSpinnerCategory, {\n          isLoading: isFetching,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isFetching: selectIsFetching\n});\n/**\r\n * all thunk does is if we dispatch a function instead of an object(action object) then thunk will pass the dipatch to that\r\n * function and we can then use the dispatch method to pass multiple dispatch methods in the same function at once!!!\r\n *  */\n\nconst mapDispatchToProps = dispatch => ({\n  fetchShopCollectionsAsync: () => dispatch(fetchShopCollectionsAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Shop);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"WithSpinnerCollectionPreview\");\n$RefreshReg$(_c2, \"WithSpinnerCategory\");","map":{"version":3,"sources":["C:/React/crwn-clothing/src/pages/shoppage/shoppage.page.jsx"],"names":["React","Route","connect","createStructuredSelector","CollectionPreview","Category","withSpinner","selectIsFetching","fetchShopCollectionsAsync","WithSpinnerCollectionPreview","WithSpinnerCategory","Shop","Component","componentDidMount","props","render","match","isFetching","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAOC,iBAAP,MAA8B,kEAA9B;AACA,OAAOC,QAAP,MAAqB,8CAArB;AACA,SAASC,WAAT,QAA4B,sDAA5B;AACA,SAASC,gBAAT,QAAiC,iCAAjC;AAEA,SAASC,yBAAT,QAA0C,+BAA1C;AAEA,OAAO,wBAAP;AAEA,MAAMC,4BAA4B,GAAGH,WAAW,CAACF,iBAAD,CAAhD;KAAMK,4B;AACN,MAAMC,mBAAmB,GAAGJ,WAAW,CAACD,QAAD,CAAvC;MAAMK,mB;;AAEN,MAAMC,IAAN,SAAmBX,KAAK,CAACY,SAAzB,CAAmC;AACjCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEL,MAAAA;AAAF,QAAgC,KAAKM,KAA3C;AACAN,IAAAA,yBAAyB;AAC1B;;AAEDO,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAwB,KAAKH,KAAnC;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,GAFtB;AAGE,QAAA,MAAM,EAAGJ,KAAD,iBACN,QAAC,4BAAD;AAA8B,UAAA,SAAS,EAAEG,UAAzC;AAAA,aAAyDH;AAAzD;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,KAAD;AACE,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,cADtB;AAEE,QAAA,MAAM,EAAGJ,KAAD,iBACN,QAAC,mBAAD;AAAqB,UAAA,SAAS,EAAEG,UAAhC;AAAA,aAAgDH;AAAhD;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AAzBgC;;AA4BnC,MAAMK,eAAe,GAAGhB,wBAAwB,CAAC;AAC/Cc,EAAAA,UAAU,EAAEV;AADmC,CAAD,CAAhD;AAIA;AACA;AACA;AACA;;AACA,MAAMa,kBAAkB,GAAIC,QAAD,KAAe;AACxCb,EAAAA,yBAAyB,EAAE,MAAMa,QAAQ,CAACb,yBAAyB,EAA1B;AADD,CAAf,CAA3B;;AAIA,eAAeN,OAAO,CAACiB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CT,IAA7C,CAAf","sourcesContent":["import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\n// import { firestore, fetchShopData } from \"../../utils/firebase/firebase.utils\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nimport CollectionPreview from \"../../components/collection-preview/collection-preview.component\";\r\nimport Category from \"../../components/category/category.component\";\r\nimport { withSpinner } from \"../../components/with-spinner/with-spinner.component\";\r\nimport { selectIsFetching } from \"../../redux/shop/shop.selectors\";\r\n\r\nimport { fetchShopCollectionsAsync } from \"../../redux/shop/shop.actions\";\r\n\r\nimport \"./shoppage.styles.scss\";\r\n\r\nconst WithSpinnerCollectionPreview = withSpinner(CollectionPreview);\r\nconst WithSpinnerCategory = withSpinner(Category);\r\n\r\nclass Shop extends React.Component {\r\n  componentDidMount() {\r\n    const { fetchShopCollectionsAsync } = this.props;\r\n    fetchShopCollectionsAsync();\r\n  }\r\n\r\n  render() {\r\n    const { match, isFetching } = this.props;\r\n    return (\r\n      <div className=\"shop-page\">\r\n        <Route\r\n          exact\r\n          path={`${match.path}/`}\r\n          render={(props) => (\r\n            <WithSpinnerCollectionPreview isLoading={isFetching} {...props} />\r\n          )}\r\n        />\r\n        <Route\r\n          path={`${match.path}/:categoryId`}\r\n          render={(props) => (\r\n            <WithSpinnerCategory isLoading={isFetching} {...props} />\r\n          )}\r\n        ></Route>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isFetching: selectIsFetching,\r\n});\r\n\r\n/**\r\n * all thunk does is if we dispatch a function instead of an object(action object) then thunk will pass the dipatch to that\r\n * function and we can then use the dispatch method to pass multiple dispatch methods in the same function at once!!!\r\n *  */\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchShopCollectionsAsync: () => dispatch(fetchShopCollectionsAsync()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Shop);\r\n"]},"metadata":{},"sourceType":"module"}