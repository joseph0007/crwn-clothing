{"ast":null,"code":"import { takeLatest, put, call, all, takeEvery } from \"redux-saga/effects\";\nimport userTypes from \"./user.types\";\nimport { auth, googleProvider, createUserDocDB } from \"../../utils/firebase/firebase.utils\";\nimport { googleSignInFailure, googleSignInSuccess, userLogoutSuccess, userLogoutFailure } from \"./users.actions\";\n/* ----------------------------- google sign in ----------------------------- */\n\nexport function* googleSignInStart() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userDocRef = yield call(createUserDocDB, user);\n    const userSnapShot = yield userDocRef.get();\n    console.warn(userSnapShot);\n    yield put(googleSignInSuccess(userSnapShot));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* isGoogleSignIn() {\n  yield takeLatest(userTypes.GOOGLE_SIGN_IN_START, googleSignInStart);\n}\n/* --------------------------------- logout --------------------------------- */\n\nexport function* logout() {\n  try {\n    const userRef = yield auth.signOut();\n    console.log(userRef);\n    yield put(userLogoutSuccess());\n  } catch (error) {\n    yield put(userLogoutFailure(error));\n  }\n}\nexport function* userLogoutAsync() {\n  yield takeEvery(userTypes.USER_LOGOUT_START, logout);\n}\n/* ------------------------------ email sign in ----------------------------- */\n\nexport function* emailAndPassLogin() {\n  try {} catch (error) {}\n}\nexport function* emailAndPassLoginAsync() {\n  yield takeLatest(userTypes.EMAIL_SIGN_IN_START);\n}\nexport function* userSagas() {\n  yield all([call(isGoogleSignIn), call(userLogoutAsync)]);\n}","map":{"version":3,"sources":["C:/React/crwn-clothing/src/redux/users/user.sagas.js"],"names":["takeLatest","put","call","all","takeEvery","userTypes","auth","googleProvider","createUserDocDB","googleSignInFailure","googleSignInSuccess","userLogoutSuccess","userLogoutFailure","googleSignInStart","user","signInWithPopup","userDocRef","userSnapShot","get","console","warn","error","isGoogleSignIn","GOOGLE_SIGN_IN_START","logout","userRef","signOut","log","userLogoutAsync","USER_LOGOUT_START","emailAndPassLogin","emailAndPassLoginAsync","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,GAAhC,EAAqCC,SAArC,QAAsD,oBAAtD;AACA,OAAOC,SAAP,MAAsB,cAAtB;AAEA,SACEC,IADF,EAEEC,cAFF,EAGEC,eAHF,QAIO,qCAJP;AAKA,SACEC,mBADF,EAEEC,mBAFF,EAGEC,iBAHF,EAIEC,iBAJF,QAKO,iBALP;AAOA;;AACA,OAAO,UAAUC,iBAAV,GAA8B;AACnC,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMR,IAAI,CAACS,eAAL,CAAqBR,cAArB,CAAvB;AAEA,UAAMS,UAAU,GAAG,MAAMd,IAAI,CAACM,eAAD,EAAkBM,IAAlB,CAA7B;AACA,UAAMG,YAAY,GAAG,MAAMD,UAAU,CAACE,GAAX,EAA3B;AAEAC,IAAAA,OAAO,CAACC,IAAR,CAAaH,YAAb;AAEA,UAAMhB,GAAG,CAACS,mBAAmB,CAACO,YAAD,CAApB,CAAT;AACD,GATD,CASE,OAAOI,KAAP,EAAc;AACd,UAAMpB,GAAG,CAACQ,mBAAmB,CAACY,KAAD,CAApB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,cAAV,GAA2B;AAChC,QAAMtB,UAAU,CAACK,SAAS,CAACkB,oBAAX,EAAiCV,iBAAjC,CAAhB;AACD;AAED;;AACA,OAAO,UAAUW,MAAV,GAAmB;AACxB,MAAI;AACF,UAAMC,OAAO,GAAG,MAAMnB,IAAI,CAACoB,OAAL,EAAtB;AAEAP,IAAAA,OAAO,CAACQ,GAAR,CAAYF,OAAZ;AAEA,UAAMxB,GAAG,CAACU,iBAAiB,EAAlB,CAAT;AACD,GAND,CAME,OAAOU,KAAP,EAAc;AACd,UAAMpB,GAAG,CAACW,iBAAiB,CAACS,KAAD,CAAlB,CAAT;AACD;AACF;AAED,OAAO,UAAUO,eAAV,GAA4B;AACjC,QAAMxB,SAAS,CAACC,SAAS,CAACwB,iBAAX,EAA8BL,MAA9B,CAAf;AACD;AAED;;AACA,OAAO,UAAUM,iBAAV,GAA8B;AACnC,MAAI,CACH,CADD,CACE,OAAOT,KAAP,EAAc,CAAE;AACnB;AAED,OAAO,UAAUU,sBAAV,GAAmC;AACxC,QAAM/B,UAAU,CAACK,SAAS,CAAC2B,mBAAX,CAAhB;AACD;AAED,OAAO,UAAUC,SAAV,GAAsB;AAC3B,QAAM9B,GAAG,CAAC,CAACD,IAAI,CAACoB,cAAD,CAAL,EAAuBpB,IAAI,CAAC0B,eAAD,CAA3B,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, put, call, all, takeEvery } from \"redux-saga/effects\";\r\nimport userTypes from \"./user.types\";\r\n\r\nimport {\r\n  auth,\r\n  googleProvider,\r\n  createUserDocDB,\r\n} from \"../../utils/firebase/firebase.utils\";\r\nimport {\r\n  googleSignInFailure,\r\n  googleSignInSuccess,\r\n  userLogoutSuccess,\r\n  userLogoutFailure,\r\n} from \"./users.actions\";\r\n\r\n/* ----------------------------- google sign in ----------------------------- */\r\nexport function* googleSignInStart() {\r\n  try {\r\n    const { user } = yield auth.signInWithPopup(googleProvider);\r\n\r\n    const userDocRef = yield call(createUserDocDB, user);\r\n    const userSnapShot = yield userDocRef.get();\r\n\r\n    console.warn(userSnapShot);\r\n\r\n    yield put(googleSignInSuccess(userSnapShot));\r\n  } catch (error) {\r\n    yield put(googleSignInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* isGoogleSignIn() {\r\n  yield takeLatest(userTypes.GOOGLE_SIGN_IN_START, googleSignInStart);\r\n}\r\n\r\n/* --------------------------------- logout --------------------------------- */\r\nexport function* logout() {\r\n  try {\r\n    const userRef = yield auth.signOut();\r\n\r\n    console.log(userRef);\r\n\r\n    yield put(userLogoutSuccess());\r\n  } catch (error) {\r\n    yield put(userLogoutFailure(error));\r\n  }\r\n}\r\n\r\nexport function* userLogoutAsync() {\r\n  yield takeEvery(userTypes.USER_LOGOUT_START, logout);\r\n}\r\n\r\n/* ------------------------------ email sign in ----------------------------- */\r\nexport function* emailAndPassLogin() {\r\n  try {\r\n  } catch (error) {}\r\n}\r\n\r\nexport function* emailAndPassLoginAsync() {\r\n  yield takeLatest(userTypes.EMAIL_SIGN_IN_START);\r\n}\r\n\r\nexport function* userSagas() {\r\n  yield all([call(isGoogleSignIn), call(userLogoutAsync)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}